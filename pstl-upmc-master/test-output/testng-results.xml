<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="28" passed="28" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2018-05-16T23:55:11Z" name="Ant suite" finished-at="2018-05-16T23:55:12Z" duration-ms="649">
    <groups>
      <group name="executeStringQuery">
        <method signature="ReaderTest.testExecuteStringQuery()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testExecuteStringQuery" class="com.puck.reader.xml.ReaderTest"/>
      </group> <!-- executeStringQuery -->
      <group name="reader">
        <method signature="ReaderTest.testExecuteBooleanQuery()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testExecuteBooleanQuery" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testExecuteNodeQuery()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testExecuteNodeQuery" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testExecuteNodeSetQuery()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testExecuteNodeSetQuery" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testExecuteStringQuery()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testExecuteStringQuery" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGenerateEdgePathFromIndex()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGenerateEdgePathFromIndex" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGenerateNodePathWithIndex()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGenerateNodePathWithIndex" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGetAllEdges()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetAllEdges" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGetAllNodes()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetAllNodes" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGetEdge()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetEdge" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGetEdgeDestination()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetEdgeDestination" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGetEdgeFrom()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetEdgeFrom" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGetEdgeId()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetEdgeId" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGetEdgeSource()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetEdgeSource" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGetEdgeType()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetEdgeType" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGetNbEdges()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetNbEdges" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGetNbNodes()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetNbNodes" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGetNode()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetNode" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGetNodeId()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetNodeId" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGetNodeName()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetNodeName" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGetNodeType()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetNodeType" class="com.puck.reader.xml.ReaderTest"/>
      </group> <!-- reader -->
      <group name="getEdgeDestination">
        <method signature="ReaderTest.testGetEdgeDestination()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetEdgeDestination" class="com.puck.reader.xml.ReaderTest"/>
      </group> <!-- getEdgeDestination -->
      <group name="simple">
        <method signature="EdgeTest.testGetFrom()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" name="testGetFrom" class="com.puck.nodes.piccolo2d.EdgeTest"/>
        <method signature="EdgeTest.testGetId()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" name="testGetId" class="com.puck.nodes.piccolo2d.EdgeTest"/>
        <method signature="EdgeTest.testGetTo()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" name="testGetTo" class="com.puck.nodes.piccolo2d.EdgeTest"/>
        <method signature="EdgeTest.testGetType()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" name="testGetType" class="com.puck.nodes.piccolo2d.EdgeTest"/>
        <method signature="EdgeTest.testSetFrom()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" name="testSetFrom" class="com.puck.nodes.piccolo2d.EdgeTest"/>
        <method signature="EdgeTest.testSetId()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" name="testSetId" class="com.puck.nodes.piccolo2d.EdgeTest"/>
        <method signature="EdgeTest.testSetType()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" name="testSetType" class="com.puck.nodes.piccolo2d.EdgeTest"/>
        <method signature="ReaderTest.testExecuteBooleanQuery()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testExecuteBooleanQuery" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testExecuteNodeQuery()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testExecuteNodeQuery" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testExecuteNodeSetQuery()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testExecuteNodeSetQuery" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testExecuteStringQuery()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testExecuteStringQuery" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGenerateEdgePathFromIndex()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGenerateEdgePathFromIndex" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGenerateNodePathWithIndex()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGenerateNodePathWithIndex" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGetAllEdges()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetAllEdges" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGetAllNodes()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetAllNodes" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGetEdge()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetEdge" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGetEdgeDestination()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetEdgeDestination" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGetEdgeFrom()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetEdgeFrom" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGetEdgeId()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetEdgeId" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGetEdgeSource()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetEdgeSource" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGetEdgeType()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetEdgeType" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGetNbEdges()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetNbEdges" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGetNbNodes()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetNbNodes" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGetNode()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetNode" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGetNodeId()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetNodeId" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGetNodeName()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetNodeName" class="com.puck.reader.xml.ReaderTest"/>
        <method signature="ReaderTest.testGetNodeType()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetNodeType" class="com.puck.reader.xml.ReaderTest"/>
      </group> <!-- simple -->
      <group name="getId">
        <method signature="EdgeTest.testGetId()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" name="testGetId" class="com.puck.nodes.piccolo2d.EdgeTest"/>
      </group> <!-- getId -->
      <group name="getEdgeId">
        <method signature="ReaderTest.testGetEdgeId()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetEdgeId" class="com.puck.reader.xml.ReaderTest"/>
      </group> <!-- getEdgeId -->
      <group name="getEdge">
        <method signature="EdgeTest.testGetType()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" name="testGetType" class="com.puck.nodes.piccolo2d.EdgeTest"/>
        <method signature="ReaderTest.testGetEdge()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetEdge" class="com.puck.reader.xml.ReaderTest"/>
      </group> <!-- getEdge -->
      <group name="generateNodePathWithIndex">
        <method signature="ReaderTest.testGenerateNodePathWithIndex()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGenerateNodePathWithIndex" class="com.puck.reader.xml.ReaderTest"/>
      </group> <!-- generateNodePathWithIndex -->
      <group name="getAllNodes">
        <method signature="ReaderTest.testGetAllNodes()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetAllNodes" class="com.puck.reader.xml.ReaderTest"/>
      </group> <!-- getAllNodes -->
      <group name="edge">
        <method signature="EdgeTest.testGetFrom()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" name="testGetFrom" class="com.puck.nodes.piccolo2d.EdgeTest"/>
        <method signature="EdgeTest.testGetId()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" name="testGetId" class="com.puck.nodes.piccolo2d.EdgeTest"/>
        <method signature="EdgeTest.testGetTo()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" name="testGetTo" class="com.puck.nodes.piccolo2d.EdgeTest"/>
        <method signature="EdgeTest.testGetType()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" name="testGetType" class="com.puck.nodes.piccolo2d.EdgeTest"/>
        <method signature="EdgeTest.testSetFrom()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" name="testSetFrom" class="com.puck.nodes.piccolo2d.EdgeTest"/>
        <method signature="EdgeTest.testSetId()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" name="testSetId" class="com.puck.nodes.piccolo2d.EdgeTest"/>
        <method signature="EdgeTest.testSetType()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" name="testSetType" class="com.puck.nodes.piccolo2d.EdgeTest"/>
      </group> <!-- edge -->
      <group name="getNbNodes">
        <method signature="ReaderTest.testGetNbNodes()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetNbNodes" class="com.puck.reader.xml.ReaderTest"/>
      </group> <!-- getNbNodes -->
      <group name="getEdgeType">
        <method signature="ReaderTest.testGetEdgeType()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetEdgeType" class="com.puck.reader.xml.ReaderTest"/>
      </group> <!-- getEdgeType -->
      <group name="setId">
        <method signature="EdgeTest.testSetId()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" name="testSetId" class="com.puck.nodes.piccolo2d.EdgeTest"/>
      </group> <!-- setId -->
      <group name="getNodeType">
        <method signature="ReaderTest.testGetNodeType()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetNodeType" class="com.puck.reader.xml.ReaderTest"/>
      </group> <!-- getNodeType -->
      <group name="getFrom">
        <method signature="EdgeTest.testGetFrom()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" name="testGetFrom" class="com.puck.nodes.piccolo2d.EdgeTest"/>
      </group> <!-- getFrom -->
      <group name="executeNodeSetQuury">
        <method signature="ReaderTest.testExecuteNodeSetQuery()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testExecuteNodeSetQuery" class="com.puck.reader.xml.ReaderTest"/>
      </group> <!-- executeNodeSetQuury -->
      <group name="getNodeId">
        <method signature="ReaderTest.testGetNodeId()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetNodeId" class="com.puck.reader.xml.ReaderTest"/>
      </group> <!-- getNodeId -->
      <group name="setFrom">
        <method signature="EdgeTest.testSetFrom()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" name="testSetFrom" class="com.puck.nodes.piccolo2d.EdgeTest"/>
      </group> <!-- setFrom -->
      <group name="getEdgeFrom">
        <method signature="ReaderTest.testGetEdgeFrom()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetEdgeFrom" class="com.puck.reader.xml.ReaderTest"/>
      </group> <!-- getEdgeFrom -->
      <group name="getTo">
        <method signature="EdgeTest.testGetTo()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" name="testGetTo" class="com.puck.nodes.piccolo2d.EdgeTest"/>
      </group> <!-- getTo -->
      <group name="getNodeName">
        <method signature="ReaderTest.testGetNodeName()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetNodeName" class="com.puck.reader.xml.ReaderTest"/>
      </group> <!-- getNodeName -->
      <group name="setType">
        <method signature="EdgeTest.testSetType()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" name="testSetType" class="com.puck.nodes.piccolo2d.EdgeTest"/>
      </group> <!-- setType -->
      <group name="generateEdgePathFromIndex">
        <method signature="ReaderTest.testGenerateEdgePathFromIndex()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGenerateEdgePathFromIndex" class="com.puck.reader.xml.ReaderTest"/>
      </group> <!-- generateEdgePathFromIndex -->
      <group name="executeBooleanQuery">
        <method signature="ReaderTest.testExecuteBooleanQuery()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testExecuteBooleanQuery" class="com.puck.reader.xml.ReaderTest"/>
      </group> <!-- executeBooleanQuery -->
      <group name="getEdgeSource">
        <method signature="ReaderTest.testGetEdgeSource()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetEdgeSource" class="com.puck.reader.xml.ReaderTest"/>
      </group> <!-- getEdgeSource -->
      <group name="getAllEdges">
        <method signature="ReaderTest.testGetAllEdges()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetAllEdges" class="com.puck.reader.xml.ReaderTest"/>
      </group> <!-- getAllEdges -->
      <group name="getNode">
        <method signature="ReaderTest.testGetNode()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetNode" class="com.puck.reader.xml.ReaderTest"/>
      </group> <!-- getNode -->
      <group name="getNbEdges">
        <method signature="ReaderTest.testGetNbEdges()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testGetNbEdges" class="com.puck.reader.xml.ReaderTest"/>
      </group> <!-- getNbEdges -->
      <group name="executeNodeQuery">
        <method signature="ReaderTest.testExecuteNodeQuery()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" name="testExecuteNodeQuery" class="com.puck.reader.xml.ReaderTest"/>
      </group> <!-- executeNodeQuery -->
    </groups>
    <test started-at="2018-05-16T23:55:11Z" name="Ant test" finished-at="2018-05-16T23:55:12Z" duration-ms="649">
      <class name="com.puck.reader.xml.ReaderTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:11Z" name="setUp" finished-at="2018-05-16T23:55:12Z" duration-ms="219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testExecuteBooleanQuery()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testExecuteBooleanQuery()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="testExecuteBooleanQuery" description="Teste de la methode executeBooleanQuery" finished-at="2018-05-16T23:55:12Z" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExecuteBooleanQuery -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="tearDown" finished-at="2018-05-16T23:55:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testExecuteBooleanQuery()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="setUp" finished-at="2018-05-16T23:55:12Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testExecuteNodeQuery()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testExecuteNodeQuery()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="testExecuteNodeQuery" description="Teste de la methode executeNodeQuery" finished-at="2018-05-16T23:55:12Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExecuteNodeQuery -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="tearDown" finished-at="2018-05-16T23:55:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testExecuteNodeQuery()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="setUp" finished-at="2018-05-16T23:55:12Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testExecuteNodeSetQuery()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testExecuteNodeSetQuery()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="testExecuteNodeSetQuery" description="Teste de la methode executeNodeSetQuery" finished-at="2018-05-16T23:55:12Z" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExecuteNodeSetQuery -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="tearDown" finished-at="2018-05-16T23:55:12Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testExecuteNodeSetQuery()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="setUp" finished-at="2018-05-16T23:55:12Z" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testExecuteStringQuery()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testExecuteStringQuery()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="testExecuteStringQuery" description="Teste de la methode executeStringQuery" finished-at="2018-05-16T23:55:12Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExecuteStringQuery -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="tearDown" finished-at="2018-05-16T23:55:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testExecuteStringQuery()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="setUp" finished-at="2018-05-16T23:55:12Z" duration-ms="12" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGenerateEdgePathFromIndex()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGenerateEdgePathFromIndex()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="testGenerateEdgePathFromIndex" description="La mÃ©thode permet de tester la mÃ©thode generetaeEdgePathFromIndex" finished-at="2018-05-16T23:55:12Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateEdgePathFromIndex -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="tearDown" finished-at="2018-05-16T23:55:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGenerateEdgePathFromIndex()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="setUp" finished-at="2018-05-16T23:55:12Z" duration-ms="77" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGenerateNodePathWithIndex()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGenerateNodePathWithIndex()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="testGenerateNodePathWithIndex" description="Teste de la methode generateNodePathWithIndex" finished-at="2018-05-16T23:55:12Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateNodePathWithIndex -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="tearDown" finished-at="2018-05-16T23:55:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGenerateNodePathWithIndex()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="setUp" finished-at="2018-05-16T23:55:12Z" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGetAllEdges()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetAllEdges()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="testGetAllEdges" description="Teste de la mÃ©thode getAllEdges" finished-at="2018-05-16T23:55:12Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllEdges -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="tearDown" finished-at="2018-05-16T23:55:12Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGetAllEdges()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="setUp" finished-at="2018-05-16T23:55:12Z" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGetAllNodes()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetAllNodes()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="testGetAllNodes" description="Teste de la methode getAllNodes" finished-at="2018-05-16T23:55:12Z" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllNodes -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="tearDown" finished-at="2018-05-16T23:55:12Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGetAllNodes()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="setUp" finished-at="2018-05-16T23:55:12Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGetEdge()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetEdge()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="testGetEdge" description="La mÃ©thode permet de tester la mÃ©thode getEdge de la classe Reader" finished-at="2018-05-16T23:55:12Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEdge -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="tearDown" finished-at="2018-05-16T23:55:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGetEdge()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="setUp" finished-at="2018-05-16T23:55:12Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGetEdgeDestination()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetEdgeDestination()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="testGetEdgeDestination" description="La methode permet de tester la methode getEdgeDestination de la classe Reader" finished-at="2018-05-16T23:55:12Z" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEdgeDestination -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="tearDown" finished-at="2018-05-16T23:55:12Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGetEdgeDestination()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="setUp" finished-at="2018-05-16T23:55:12Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGetEdgeFrom()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetEdgeFrom()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="testGetEdgeFrom" description="Methode permet de tester la methode getEdgeFrom de la classe Reader" finished-at="2018-05-16T23:55:12Z" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEdgeFrom -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="tearDown" finished-at="2018-05-16T23:55:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGetEdgeFrom()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="setUp" finished-at="2018-05-16T23:55:12Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGetEdgeId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetEdgeId()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="testGetEdgeId" description="La mÃ©thode permet de tester la methode getEdgeId de la classe Reader" finished-at="2018-05-16T23:55:12Z" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEdgeId -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="tearDown" finished-at="2018-05-16T23:55:12Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGetEdgeId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="setUp" finished-at="2018-05-16T23:55:12Z" duration-ms="12" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGetEdgeSource()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetEdgeSource()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="testGetEdgeSource" description="La mÃ©thode permet de tester la mÃ©thode getEdgeSource de la classe Reader" finished-at="2018-05-16T23:55:12Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEdgeSource -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="tearDown" finished-at="2018-05-16T23:55:12Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGetEdgeSource()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="setUp" finished-at="2018-05-16T23:55:12Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGetEdgeType()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetEdgeType()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="testGetEdgeType" description="la methode permet de tester la methode getEdgeType de la classe Reader" finished-at="2018-05-16T23:55:12Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEdgeType -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="tearDown" finished-at="2018-05-16T23:55:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGetEdgeType()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="setUp" finished-at="2018-05-16T23:55:12Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGetNbEdges()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetNbEdges()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="testGetNbEdges" description="Teste de la mÃ©thode getNbEdges" finished-at="2018-05-16T23:55:12Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNbEdges -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="tearDown" finished-at="2018-05-16T23:55:12Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGetNbEdges()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="setUp" finished-at="2018-05-16T23:55:12Z" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGetNbNodes()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetNbNodes()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="testGetNbNodes" description="Teste de la methode getNbNodes" finished-at="2018-05-16T23:55:12Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNbNodes -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="tearDown" finished-at="2018-05-16T23:55:12Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGetNbNodes()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="setUp" finished-at="2018-05-16T23:55:12Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGetNode()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetNode()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="testGetNode" description="Teste de la methode getNode" finished-at="2018-05-16T23:55:12Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNode -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="setUp" finished-at="2018-05-16T23:55:12Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGetNodeId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="tearDown" finished-at="2018-05-16T23:55:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGetNode()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testGetNodeId()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="testGetNodeId" description="Teste de la methode getNodeId" finished-at="2018-05-16T23:55:12Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNodeId -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="tearDown" finished-at="2018-05-16T23:55:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGetNodeId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="setUp" finished-at="2018-05-16T23:55:12Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGetNodeName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetNodeName()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="testGetNodeName" description="Teste de la methode getNodeName" finished-at="2018-05-16T23:55:12Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNodeName -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="tearDown" finished-at="2018-05-16T23:55:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGetNodeName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="setUp" finished-at="2018-05-16T23:55:12Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGetNodeType()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetNodeType()[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="testGetNodeType" description="Teste de la methode getNodeType" finished-at="2018-05-16T23:55:12Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNodeType -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.puck.reader.xml.ReaderTest@358ee631]" started-at="2018-05-16T23:55:12Z" name="tearDown" finished-at="2018-05-16T23:55:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.reader.xml.ReaderTest.testGetNodeType()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.puck.reader.xml.ReaderTest -->
      <class name="com.puck.nodes.piccolo2d.EdgeTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" started-at="2018-05-16T23:55:11Z" name="setUp" finished-at="2018-05-16T23:55:11Z" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.nodes.piccolo2d.EdgeTest.testGetFrom()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetFrom()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" started-at="2018-05-16T23:55:11Z" name="testGetFrom" description="Cette mÃ©thode permet de tester la mÃ©thode getFrom() de la classe Edge qui permet de retourner la valeur de l&#039;attribut fromPour tester cette mÃ©thode, on commence par initialiser une variable e de type EdgeLa valeur par dÃ©faut de l&#039;attribut from est une chaÃ®ne de caractÃ¨res videOn appelle la mÃ©thode getFrom() sur cette variable eEt on teste si la valeur obtenu par l&#039;appel de cette mÃ©thode correspond bien avec le rÃ©sultat attendu, la chaÃ®ne des caractÃ¨res vide" finished-at="2018-05-16T23:55:11Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrom -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" started-at="2018-05-16T23:55:11Z" name="tearDown" finished-at="2018-05-16T23:55:11Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.nodes.piccolo2d.EdgeTest.testGetFrom()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" started-at="2018-05-16T23:55:11Z" name="setUp" finished-at="2018-05-16T23:55:11Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.nodes.piccolo2d.EdgeTest.testGetId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetId()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" started-at="2018-05-16T23:55:11Z" name="testGetId" description="Cette mÃ©thode permet de tester la mÃ©thode getId() de la classe Edge qui permet de retourner la valeur de l&#039;attribut id.Pour tester cette mÃ©thode on commence par initialiser une variable e de type Edge.Puis on appelle la mÃ©thode getId() sur cette variable rPar dÃ©faaut l&#039;attribut id vaut la chaÃ®ne de caractÃ¨res videOn teste le rÃ©sultat obtenu par l&#039;appel de la mÃ©thode correspond bien avec le rÃ©sultat attendu la chaÃ®ne des caraxtÃ¨res vide" finished-at="2018-05-16T23:55:11Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetId -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" started-at="2018-05-16T23:55:11Z" name="tearDown" finished-at="2018-05-16T23:55:11Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.nodes.piccolo2d.EdgeTest.testGetId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" started-at="2018-05-16T23:55:11Z" name="setUp" finished-at="2018-05-16T23:55:11Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.nodes.piccolo2d.EdgeTest.testGetTo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetTo()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" started-at="2018-05-16T23:55:11Z" name="testGetTo" description="Cette mÃ©thode permet de tester la mÃ©thode getTo() de la classe Edge qui permet de retourner l&#039;attribut to.Pour tester cette mÃ©thode on commence par initialiser une variable e de type EdgeLa valeur par dÃ©faut de l&#039;attribut to est une chaÃ®ne de caractÃ¨res videOn appelle la mÃ©thode getTo() sur la variable eOn teste si le rÃ©sultat obtenu correspond bien avec le rÃ©sultat attendu" finished-at="2018-05-16T23:55:11Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTo -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" started-at="2018-05-16T23:55:11Z" name="setUp" finished-at="2018-05-16T23:55:11Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.nodes.piccolo2d.EdgeTest.testGetType()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" started-at="2018-05-16T23:55:11Z" name="tearDown" finished-at="2018-05-16T23:55:11Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.nodes.piccolo2d.EdgeTest.testGetTo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testGetType()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" started-at="2018-05-16T23:55:11Z" name="testGetType" description="Cette mÃ©thode permet de tester la mÃ©thode getType de la classe Edge, qui permet d&#039;obtenir l&#039;attribut type.Pour tester cette mÃ©thode, on commence par initialiser une variable e de type EdgePuis on appel la mÃ©thode getType sur la variable e.Par dÃ©faut l&#039;attribut type d&#039;une objet de type Edge est la chaÃ®ne de caractÃ¨res vide.On teste alors si la valeur par dÃ©faut est Ã©gale Ã  la valeur retournÃ©e par l&#039;appel de la mÃ©thode getType sur la variable e." finished-at="2018-05-16T23:55:11Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" started-at="2018-05-16T23:55:11Z" name="tearDown" finished-at="2018-05-16T23:55:11Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.nodes.piccolo2d.EdgeTest.testGetType()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" started-at="2018-05-16T23:55:11Z" name="tearDown" finished-at="2018-05-16T23:55:11Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.nodes.piccolo2d.EdgeTest.testSetFrom()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" started-at="2018-05-16T23:55:11Z" name="setUp" finished-at="2018-05-16T23:55:11Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.nodes.piccolo2d.EdgeTest.testSetFrom()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSetFrom()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" started-at="2018-05-16T23:55:11Z" name="testSetFrom" description="Cette mÃ©thode permet de tester la mÃ©thode setFrom(from:String) de la classe Edge qui permet de changer la valeur de l&#039;attribut from par la nouvelle valeur passÃ©e en paramÃ¨tresPour tester cette mÃ©thode on commence par initialiser une variable e de type Edge.On appelle la mÃ©thode setFrom(&quot;from&quot;) sur la variable e qui permet de changer la valeur de l&#039;attribut from avec la chaÃ®ne des caractÃ¨res &quot;from&quot;On contrÃ´le maintenant si le changement de la valeur de l&#039;attribut from est bien passÃ© en testant si la valeur retournÃ© pas l&#039;appel de mÃ©thode getFrom() correspond bien avec la nouvelle valeur de l&#039;attribut from qu&#039;on vient de passer en paramÃ¨tres" finished-at="2018-05-16T23:55:11Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetFrom -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" started-at="2018-05-16T23:55:11Z" name="setUp" finished-at="2018-05-16T23:55:11Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.nodes.piccolo2d.EdgeTest.testSetId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" started-at="2018-05-16T23:55:11Z" name="tearDown" finished-at="2018-05-16T23:55:11Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.nodes.piccolo2d.EdgeTest.testSetId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testSetId()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" started-at="2018-05-16T23:55:11Z" name="testSetId" description="Cette mÃ©thode permet de tester la mÃ©thode setId(id:String) de la classe Edge qui permet de changer la valeur de l&#039;attribut id d&#039;une objet de type Edge.Pour tester cette mÃ©thode on commence par initialiser une variable e de type EdgePuis on appelle la mÃ©thode setId(&quot;id&quot;) qui est censÃ© de changer la valeur de l&#039;attribut id avec la chaÃ®ne des caractÃ¨res idOn teste si le changement est bien fait avec un appel de la mÃ©thode getId() sur la variable e manipulÃ©e" finished-at="2018-05-16T23:55:11Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetId -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" started-at="2018-05-16T23:55:11Z" name="setUp" finished-at="2018-05-16T23:55:11Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.nodes.piccolo2d.EdgeTest.testSetTo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSetTo()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" started-at="2018-05-16T23:55:11Z" name="testSetTo" description="Cette mÃ©thode permet de tester la mÃ©thode setTo(to:String) qui permet de changer la valeur de l&#039;attribut to avec la nouvelle valeur passÃ©e en paramÃ¨tresPour tester cette mÃ©thode, on commence par initialiser une variable e de type EdgePuis on appelle la mÃ©thode setTo(&quot;to&quot;) sur cette variable r, qui nous permet de changer la valeur de l&#039;attribut to avec la chaÃ®ne de caractÃ¨res &quot;to&quot;Au final, pour tester si le changement est bien passÃ©, on teste si le rÃ©sultat de l&#039;appel de la mÃ©thode getTo() sur la nouvelle variable e correspond bien avec le rÃ©sutlat attendu &quot;to&quot; " finished-at="2018-05-16T23:55:11Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetTo -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" started-at="2018-05-16T23:55:11Z" name="tearDown" finished-at="2018-05-16T23:55:11Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.nodes.piccolo2d.EdgeTest.testSetTo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" started-at="2018-05-16T23:55:11Z" name="setUp" finished-at="2018-05-16T23:55:11Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.nodes.piccolo2d.EdgeTest.testSetType()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSetType()[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" started-at="2018-05-16T23:55:11Z" name="testSetType" description="Cette mÃ©thode permet de tester la mÃ©thode setType(type: String) de la classe Edge qui permet de changer la valeur de l&#039;attribut type.Pour tester cette mÃ©thode on commence par initialiser une variable e de type Edge.Puis on appel la mÃ©thode setType avec le paramÃ¨tre type = &quot;Test type&quot; qui nous permet de changer le type de l&#039;objet de &quot;&quot; Ã  &quot;Test type&quot;Puis on teste si le rÃ©sultat retournÃ© par l&#039;appel de la mÃ©thode getType() sur l&#039;objet manipulÃ© retourne bien la valeur &quot;Test type&quot;." finished-at="2018-05-16T23:55:11Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetType -->
        <test-method is-config="true" signature="tearDown(java.lang.reflect.Method)[pri:0, instance:com.puck.nodes.piccolo2d.EdgeTest@233fe9b6]" started-at="2018-05-16T23:55:11Z" name="tearDown" finished-at="2018-05-16T23:55:11Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.puck.nodes.piccolo2d.EdgeTest.testSetType()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.puck.nodes.piccolo2d.EdgeTest -->
    </test> <!-- Ant test -->
  </suite> <!-- Ant suite -->
</testng-results>
